
set nocompatible					" must come first as it changes other options
silent! call pathogen#runtime_append_all_bundles()

syntax enable						" turn on syntax highlighting
filetype plugin indent on			" turn on file type detection


" disable smarttabs during a paste
" set paste

" highlight when searching
set incsearch

" Color chart http://vim.wikia.com/wiki/Xterm256_color_names_for_console_Vim
highlight Folded ctermfg=186 ctermbg=234
highlight JSLintError ctermbg=235
hi DiffChange ctermbg=234 ctermfg=129
hi Diffadd ctermbg=234 ctermfg=46
hi Diffdelete ctermbg=234 ctermfg=9
hi Visual ctermbg=239

set winminheight=0
set textwidth=0

"Highlight current line
set numberwidth=5
set cursorline

set wildmenu

"Enable line numbering
set number

"Set tab autoindent
" http://vim.wikia.com/wiki/Indenting_source_code
"set cindent
"set smarttab
set smartindent "automatically inserts one extra level of indentation in some cases
set autoindent "copy the indentation from the previous line
set tabstop=4 "with of tab character
set shiftwidth=4
"set softtabstop=4
"set cinkeys=0{,0},:,0#,!,!^F

set hlsearch "hilight search

"Informative status line
"set statusline=%F%m%r%h%w\ [TYPE=%Y\ %{&ff}]\ [%l/%L\ (%p%%)]

autocmd BufNewFile,BufRead *.json set ft=javascript

" disable end of line
au BufWritePre * :set binary | set noeol
au BufWritePost * :set nobinary | set eol




" Mac vim
if has("gui_running")
	set guioptions=-t
	set guioptions-=r

	colorscheme koehler 
	set transparency=15
	hi CursorLine guibg=#151515
	hi Normal guibg=#080808
endif



" Find file in current directory and edit it.
function! Find(...)
  let path="."
  if a:0==2
    let path=a:2
  endif
  let l:list=system("find ".path. " -name '".a:1."' | grep -v .svn ")
  let l:num=strlen(substitute(l:list, "[^\n]", "", "g"))
  if l:num < 1
    echo "'".a:1."' not found"
    return
  endif
  if l:num == 1
    exe "open " . substitute(l:list, "\n", "", "g")
  else
    let tmpfile = tempname()
    exe "redir! > " . tmpfile
    silent echon l:list
    redir END
    let old_efm = &efm
    set efm=%f

    if exists(":cgetfile")
        execute "silent! cgetfile " . tmpfile
    else
        execute "silent! cfile " . tmpfile
    endif

    let &efm = old_efm

    " Open the quickfix window below the current window
    botright copen

    call delete(tmpfile)
  endif
endfunction
command! -nargs=* Find :call Find(<f-args>)